//
// CsApiInsertJobCodeRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class CsApiInsertJobCodeRequest: Codable {

    public var code: String?
    public var projectId: Int?
    public var clientId: Int?
    public var linkedTaskIds: [Int]?
    public var linkedOrgGroupIds: [Int]?


    
    public init(code: String?, projectId: Int?, clientId: Int?, linkedTaskIds: [Int]?, linkedOrgGroupIds: [Int]?) {
        self.code = code
        self.projectId = projectId
        self.clientId = clientId
        self.linkedTaskIds = linkedTaskIds
        self.linkedOrgGroupIds = linkedOrgGroupIds
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(code, forKey: "Code")
        try container.encodeIfPresent(projectId, forKey: "ProjectId")
        try container.encodeIfPresent(clientId, forKey: "ClientId")
        try container.encodeIfPresent(linkedTaskIds, forKey: "LinkedTaskIds")
        try container.encodeIfPresent(linkedOrgGroupIds, forKey: "LinkedOrgGroupIds")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        code = try container.decodeIfPresent(String.self, forKey: "Code")
        projectId = try container.decodeIfPresent(Int.self, forKey: "ProjectId")
        clientId = try container.decodeIfPresent(Int.self, forKey: "ClientId")
        linkedTaskIds = try container.decodeIfPresent([Int].self, forKey: "LinkedTaskIds")
        linkedOrgGroupIds = try container.decodeIfPresent([Int].self, forKey: "LinkedOrgGroupIds")
    }
}

