//
// CsApiCreateTripRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class CsApiCreateTripRequest: Codable {

    public enum CsApiMobilePlatform: Int, Codable { 
        case _0 = 0
        case _1 = 1
        case _2 = 2
    }
    public var timesheetId: Int?
    public var vehicleId: Int?
    public var pathCoordsStringCsv: String?
    public var distanceMeters: Double?
    /** 0 &#x3D; Unknown, 1 &#x3D; iOS, 2 &#x3D; Android */
    public var mobilePlatform: CsApiMobilePlatform?


    
    public init(timesheetId: Int?, vehicleId: Int?, pathCoordsStringCsv: String?, distanceMeters: Double?, mobilePlatform: CsApiMobilePlatform?) {
        self.timesheetId = timesheetId
        self.vehicleId = vehicleId
        self.pathCoordsStringCsv = pathCoordsStringCsv
        self.distanceMeters = distanceMeters
        self.mobilePlatform = mobilePlatform
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(timesheetId, forKey: "TimesheetId")
        try container.encodeIfPresent(vehicleId, forKey: "VehicleId")
        try container.encodeIfPresent(pathCoordsStringCsv, forKey: "PathCoordsStringCsv")
        try container.encodeIfPresent(distanceMeters, forKey: "DistanceMeters")
        try container.encodeIfPresent(mobilePlatform, forKey: "MobilePlatform")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        timesheetId = try container.decodeIfPresent(Int.self, forKey: "TimesheetId")
        vehicleId = try container.decodeIfPresent(Int.self, forKey: "VehicleId")
        pathCoordsStringCsv = try container.decodeIfPresent(String.self, forKey: "PathCoordsStringCsv")
        distanceMeters = try container.decodeIfPresent(Double.self, forKey: "DistanceMeters")
        mobilePlatform = try container.decodeIfPresent(CsApiMobilePlatform.self, forKey: "MobilePlatform")
    }
}

