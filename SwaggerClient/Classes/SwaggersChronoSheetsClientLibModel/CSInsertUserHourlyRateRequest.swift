//
// CSInsertUserHourlyRateRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Fields for inserting a new set of Pay Rates for a user.  Archiving of the previous Pay Rate is done for you automatically */

open class CSInsertUserHourlyRateRequest: Codable {

    /** The Id of the User that is getting the new set of Pay Rates */
    public var userId: Int?
    /** The Hourly Rate the employee should receive during their usual rostered hours */
    public var hourlyRate: Double?
    /** The Hourly Rate the employee should receive during outside of their usual rostered hours */
    public var hourlyOvertimeRate: Double?
    /** The current date time */
    public var currentDate: Date?


    
    public init(userId: Int?, hourlyRate: Double?, hourlyOvertimeRate: Double?, currentDate: Date?) {
        self.userId = userId
        self.hourlyRate = hourlyRate
        self.hourlyOvertimeRate = hourlyOvertimeRate
        self.currentDate = currentDate
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(userId, forKey: "UserId")
        try container.encodeIfPresent(hourlyRate, forKey: "HourlyRate")
        try container.encodeIfPresent(hourlyOvertimeRate, forKey: "HourlyOvertimeRate")
        try container.encodeIfPresent(currentDate, forKey: "CurrentDate")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        userId = try container.decodeIfPresent(Int.self, forKey: "UserId")
        hourlyRate = try container.decodeIfPresent(Double.self, forKey: "HourlyRate")
        hourlyOvertimeRate = try container.decodeIfPresent(Double.self, forKey: "HourlyOvertimeRate")
        currentDate = try container.decodeIfPresent(Date.self, forKey: "CurrentDate")
    }
}

