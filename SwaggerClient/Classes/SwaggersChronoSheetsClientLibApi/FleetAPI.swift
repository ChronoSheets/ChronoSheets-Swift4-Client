//
// FleetAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class FleetAPI {
    /**
     Create a vehicle
     
     - parameter request: (body)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fleetCreateVehicle(request: CsApiInsertVehicleRequest, xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseInt32?,_ error: Error?) -> Void)) {
        fleetCreateVehicleWithRequestBuilder(request: request, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create a vehicle
     - PUT /api/Fleet/CreateVehicle
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : 0
}}, {contentType=application/xml, example=<null>
  <Data>123</Data>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : 0
}}, {contentType=application/xml, example=<null>
  <Data>123</Data>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter request: (body)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseInt32> 
     */
    open class func fleetCreateVehicleWithRequestBuilder(request: CsApiInsertVehicleRequest, xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseInt32> {
        let path = "/api/Fleet/CreateVehicle"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseInt32>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Get a particular vehicle
     
     - parameter vehicleId: (query) The ID of the vehicle you want to get 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fleetGetVehicleById(vehicleId: Int, xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseFleetVehicle?,_ error: Error?) -> Void)) {
        fleetGetVehicleByIdWithRequestBuilder(vehicleId: vehicleId, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a particular vehicle
     - GET /api/Fleet/GetVehicleById
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : {
    "IsDeleted" : true,
    "Year" : "Year",
    "PermittedEmployees" : [ 5, 5 ],
    "OrganisationId" : 6,
    "Model" : "Model",
    "Make" : "Make",
    "Id" : 0,
    "CostPerKilometer" : 1.4658129805029452,
    "LicencePlateNumber" : "LicencePlateNumber",
    "Name" : "Name"
  }
}}, {contentType=application/xml, example=<null>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : {
    "IsDeleted" : true,
    "Year" : "Year",
    "PermittedEmployees" : [ 5, 5 ],
    "OrganisationId" : 6,
    "Model" : "Model",
    "Make" : "Make",
    "Id" : 0,
    "CostPerKilometer" : 1.4658129805029452,
    "LicencePlateNumber" : "LicencePlateNumber",
    "Name" : "Name"
  }
}}, {contentType=application/xml, example=<null>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter vehicleId: (query) The ID of the vehicle you want to get 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseFleetVehicle> 
     */
    open class func fleetGetVehicleByIdWithRequestBuilder(vehicleId: Int, xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseFleetVehicle> {
        let path = "/api/Fleet/GetVehicleById"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "VehicleId": vehicleId.encodeToJSON()
        ])
        
        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseFleetVehicle>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Get a collection of vehicles that are under your organisation
     
     - parameter includeDeleted: (query)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fleetGetVehicles(includeDeleted: Bool, xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseListFleetVehicle?,_ error: Error?) -> Void)) {
        fleetGetVehiclesWithRequestBuilder(includeDeleted: includeDeleted, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get a collection of vehicles that are under your organisation
     - GET /api/Fleet/GetVehicles
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : [ {
    "IsDeleted" : true,
    "Year" : "Year",
    "PermittedEmployees" : [ 5, 5 ],
    "OrganisationId" : 6,
    "Model" : "Model",
    "Make" : "Make",
    "Id" : 0,
    "CostPerKilometer" : 1.4658129805029452,
    "LicencePlateNumber" : "LicencePlateNumber",
    "Name" : "Name"
  }, {
    "IsDeleted" : true,
    "Year" : "Year",
    "PermittedEmployees" : [ 5, 5 ],
    "OrganisationId" : 6,
    "Model" : "Model",
    "Make" : "Make",
    "Id" : 0,
    "CostPerKilometer" : 1.4658129805029452,
    "LicencePlateNumber" : "LicencePlateNumber",
    "Name" : "Name"
  } ]
}}, {contentType=application/xml, example=<null>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : [ {
    "IsDeleted" : true,
    "Year" : "Year",
    "PermittedEmployees" : [ 5, 5 ],
    "OrganisationId" : 6,
    "Model" : "Model",
    "Make" : "Make",
    "Id" : 0,
    "CostPerKilometer" : 1.4658129805029452,
    "LicencePlateNumber" : "LicencePlateNumber",
    "Name" : "Name"
  }, {
    "IsDeleted" : true,
    "Year" : "Year",
    "PermittedEmployees" : [ 5, 5 ],
    "OrganisationId" : 6,
    "Model" : "Model",
    "Make" : "Make",
    "Id" : 0,
    "CostPerKilometer" : 1.4658129805029452,
    "LicencePlateNumber" : "LicencePlateNumber",
    "Name" : "Name"
  } ]
}}, {contentType=application/xml, example=<null>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter includeDeleted: (query)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseListFleetVehicle> 
     */
    open class func fleetGetVehiclesWithRequestBuilder(includeDeleted: Bool, xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseListFleetVehicle> {
        let path = "/api/Fleet/GetVehicles"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "IncludeDeleted": includeDeleted
        ])
        
        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseListFleetVehicle>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Update a vehicle
     
     - parameter request: (body)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fleetUpdateVehicle(request: CsApiSaveVehicleRequest, xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseBoolean?,_ error: Error?) -> Void)) {
        fleetUpdateVehicleWithRequestBuilder(request: request, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Update a vehicle
     - POST /api/Fleet/UpdateVehicle
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : true
}}, {contentType=application/xml, example=<null>
  <Data>true</Data>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : true
}}, {contentType=application/xml, example=<null>
  <Data>true</Data>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter request: (body)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseBoolean> 
     */
    open class func fleetUpdateVehicleWithRequestBuilder(request: CsApiSaveVehicleRequest, xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseBoolean> {
        let path = "/api/Fleet/UpdateVehicle"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseBoolean>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
