//
// UserProfileAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UserProfileAPI {
    /**

     - parameter request: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userProfileDoLogin(request: CsApiDoLoginRequest, completion: @escaping ((_ data: CsApiApiResponseDoLoginResponse?,_ error: Error?) -> Void)) {
        userProfileDoLoginWithRequestBuilder(request: request).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/UserProfile/DoLogin
     - examples: [{contentType=application/json, example={
  "Status" : 5,
  "Message" : "Message",
  "Data" : {
    "CSAuthToken" : "CSAuthToken",
    "LoggedInUser" : {
      "SetupWizardRequired" : true,
      "UserName" : "UserName",
      "Organisation" : {
        "Timezone" : "Timezone",
        "Suburb" : "Suburb",
        "SubscriptionCustomerId" : "SubscriptionCustomerId",
        "SubscriptionPlanId" : "SubscriptionPlanId",
        "Postcode" : "Postcode",
        "EmailAddress" : "EmailAddress",
        "Name" : "Name",
        "NumberSeatsAvailable" : 6,
        "State" : "State",
        "Phone" : "Phone",
        "AddressLine02" : "AddressLine02",
        "Country" : "Country",
        "Id" : 0,
        "AddressLine01" : "AddressLine01",
        "SignupToken" : "SignupToken"
      },
      "FirstName" : "FirstName",
      "OrganisationId" : 6,
      "Roles" : 1,
      "Id" : 0,
      "LastName" : "LastName",
      "AlertSettings" : 5,
      "EmailAddress" : "EmailAddress"
    }
  }
}}, {contentType=application/xml, example=<null>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : 5,
  "Message" : "Message",
  "Data" : {
    "CSAuthToken" : "CSAuthToken",
    "LoggedInUser" : {
      "SetupWizardRequired" : true,
      "UserName" : "UserName",
      "Organisation" : {
        "Timezone" : "Timezone",
        "Suburb" : "Suburb",
        "SubscriptionCustomerId" : "SubscriptionCustomerId",
        "SubscriptionPlanId" : "SubscriptionPlanId",
        "Postcode" : "Postcode",
        "EmailAddress" : "EmailAddress",
        "Name" : "Name",
        "NumberSeatsAvailable" : 6,
        "State" : "State",
        "Phone" : "Phone",
        "AddressLine02" : "AddressLine02",
        "Country" : "Country",
        "Id" : 0,
        "AddressLine01" : "AddressLine01",
        "SignupToken" : "SignupToken"
      },
      "FirstName" : "FirstName",
      "OrganisationId" : 6,
      "Roles" : 1,
      "Id" : 0,
      "LastName" : "LastName",
      "AlertSettings" : 5,
      "EmailAddress" : "EmailAddress"
    }
  }
}}, {contentType=application/xml, example=<null>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter request: (body)  

     - returns: RequestBuilder<CsApiApiResponseDoLoginResponse> 
     */
    open class func userProfileDoLoginWithRequestBuilder(request: CsApiDoLoginRequest) -> RequestBuilder<CsApiApiResponseDoLoginResponse> {
        let path = "/api/UserProfile/DoLogin"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CsApiApiResponseDoLoginResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userProfileDoLogout(xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseBoolean?,_ error: Error?) -> Void)) {
        userProfileDoLogoutWithRequestBuilder(xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - DELETE /api/UserProfile/DoLogout
     - examples: [{contentType=application/json, example={
  "Status" : 0,
  "Message" : "Message",
  "Data" : true
}}, {contentType=application/xml, example=<null>
  <Data>true</Data>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : 0,
  "Message" : "Message",
  "Data" : true
}}, {contentType=application/xml, example=<null>
  <Data>true</Data>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseBoolean> 
     */
    open class func userProfileDoLogoutWithRequestBuilder(xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseBoolean> {
        let path = "/api/UserProfile/DoLogout"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseBoolean>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userProfileGetMyProfile(xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseUserProfile?,_ error: Error?) -> Void)) {
        userProfileGetMyProfileWithRequestBuilder(xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/UserProfile/GetMyProfile
     - examples: [{contentType=application/json, example={
  "Status" : 5,
  "Message" : "Message",
  "Data" : {
    "IsSubscribedToNewsletter" : true,
    "UserName" : "UserName",
    "FirstName" : "FirstName",
    "OrganisationId" : 6,
    "OrganisationName" : "OrganisationName",
    "OrganisationSuburb" : "OrganisationSuburb",
    "Roles" : 1,
    "Id" : 0,
    "LastName" : "LastName",
    "AlertSettings" : 5,
    "OrganisationCountry" : "OrganisationCountry",
    "EmailAddress" : "EmailAddress"
  }
}}, {contentType=application/xml, example=<null>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : 5,
  "Message" : "Message",
  "Data" : {
    "IsSubscribedToNewsletter" : true,
    "UserName" : "UserName",
    "FirstName" : "FirstName",
    "OrganisationId" : 6,
    "OrganisationName" : "OrganisationName",
    "OrganisationSuburb" : "OrganisationSuburb",
    "Roles" : 1,
    "Id" : 0,
    "LastName" : "LastName",
    "AlertSettings" : 5,
    "OrganisationCountry" : "OrganisationCountry",
    "EmailAddress" : "EmailAddress"
  }
}}, {contentType=application/xml, example=<null>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseUserProfile> 
     */
    open class func userProfileGetMyProfileWithRequestBuilder(xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseUserProfile> {
        let path = "/api/UserProfile/GetMyProfile"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseUserProfile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userProfileKeepSessionAlive(xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseBoolean?,_ error: Error?) -> Void)) {
        userProfileKeepSessionAliveWithRequestBuilder(xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /api/UserProfile/KeepSessionAlive
     - examples: [{contentType=application/json, example={
  "Status" : 0,
  "Message" : "Message",
  "Data" : true
}}, {contentType=application/xml, example=<null>
  <Data>true</Data>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : 0,
  "Message" : "Message",
  "Data" : true
}}, {contentType=application/xml, example=<null>
  <Data>true</Data>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseBoolean> 
     */
    open class func userProfileKeepSessionAliveWithRequestBuilder(xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseBoolean> {
        let path = "/api/UserProfile/KeepSessionAlive"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseBoolean>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter request: (body)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userProfileUpdateMyProfile(request: CsApiUpdateMyProfileRequest, xChronosheetsAuth: String, completion: @escaping ((_ data: CsApiApiResponseSignupResponse?,_ error: Error?) -> Void)) {
        userProfileUpdateMyProfileWithRequestBuilder(request: request, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /api/UserProfile/UpdateMyProfile
     - examples: [{contentType=application/json, example={
  "Status" : 1,
  "Message" : "Message",
  "Data" : {
    "ValidationErrors" : [ "ValidationErrors", "ValidationErrors" ],
    "UserId" : 6,
    "OrganisationId" : 0
  }
}}, {contentType=application/xml, example=<null>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : 1,
  "Message" : "Message",
  "Data" : {
    "ValidationErrors" : [ "ValidationErrors", "ValidationErrors" ],
    "UserId" : 6,
    "OrganisationId" : 0
  }
}}, {contentType=application/xml, example=<null>
  <Status>123</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter request: (body)  
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CsApiApiResponseSignupResponse> 
     */
    open class func userProfileUpdateMyProfileWithRequestBuilder(request: CsApiUpdateMyProfileRequest, xChronosheetsAuth: String) -> RequestBuilder<CsApiApiResponseSignupResponse> {
        let path = "/api/UserProfile/UpdateMyProfile"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = NSURLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CsApiApiResponseSignupResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
