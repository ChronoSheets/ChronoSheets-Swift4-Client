//
// UserPayRatesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UserPayRatesAPI {
    /**
     Create a new pay rate for a particular user, archiving the previous pay rate.    Requires the 'ManageOrganisationUsers' permission.
     
     - parameter request: (body) An Insert UserHourlyRate Request object containing values for the new UserHourlyRate to create 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userPayRatesCreatePayRate(request: CSInsertUserHourlyRateRequest, xChronosheetsAuth: String, completion: @escaping ((_ data: CSApiResponseInt32?,_ error: Error?) -> Void)) {
        userPayRatesCreatePayRateWithRequestBuilder(request: request, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create a new pay rate for a particular user, archiving the previous pay rate.    Requires the 'ManageOrganisationUsers' permission.
     - POST /api/UserPayRates/CreatePayRate
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : 0
}}, {contentType=application/xml, example=<null>
  <Data>123</Data>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : 0
}}, {contentType=application/xml, example=<null>
  <Data>123</Data>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter request: (body) An Insert UserHourlyRate Request object containing values for the new UserHourlyRate to create 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CSApiResponseInt32> 
     */
    open class func userPayRatesCreatePayRateWithRequestBuilder(request: CSInsertUserHourlyRateRequest, xChronosheetsAuth: String) -> RequestBuilder<CSApiResponseInt32> {
        let path = "/api/UserPayRates/CreatePayRate"
        let URLString = ChronoSheetsAPIAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CSApiResponseInt32>.Type = ChronoSheetsAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

    /**
     Get a collection of pay rates for a particular user, specified by user id.    Requires the 'ManageOrganisationUsers' permission.
     
     - parameter userId: (query) The ID of the User for which you want to get UserHourlyRate objects 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func userPayRatesGetPayRates(userId: Int, xChronosheetsAuth: String, completion: @escaping ((_ data: CSApiResponseListUserHourlyRate?,_ error: Error?) -> Void)) {
        userPayRatesGetPayRatesWithRequestBuilder(userId: userId, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a collection of pay rates for a particular user, specified by user id.    Requires the 'ManageOrganisationUsers' permission.
     - GET /api/UserPayRates/GetPayRates
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : [ {
    "IsCurrent" : true,
    "RateId" : 0,
    "StartDateTime" : "2000-01-23T04:56:07.000+00:00",
    "EndDateTime" : "2000-01-23T04:56:07.000+00:00",
    "UserId" : 6,
    "OrganisationId" : 1,
    "HourlyOvertimeRate" : 5.637376656633329,
    "HourlyRate" : 5.962133916683182
  }, {
    "IsCurrent" : true,
    "RateId" : 0,
    "StartDateTime" : "2000-01-23T04:56:07.000+00:00",
    "EndDateTime" : "2000-01-23T04:56:07.000+00:00",
    "UserId" : 6,
    "OrganisationId" : 1,
    "HourlyOvertimeRate" : 5.637376656633329,
    "HourlyRate" : 5.962133916683182
  } ]
}}, {contentType=application/xml, example=<null>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "Message" : "Message",
  "Data" : [ {
    "IsCurrent" : true,
    "RateId" : 0,
    "StartDateTime" : "2000-01-23T04:56:07.000+00:00",
    "EndDateTime" : "2000-01-23T04:56:07.000+00:00",
    "UserId" : 6,
    "OrganisationId" : 1,
    "HourlyOvertimeRate" : 5.637376656633329,
    "HourlyRate" : 5.962133916683182
  }, {
    "IsCurrent" : true,
    "RateId" : 0,
    "StartDateTime" : "2000-01-23T04:56:07.000+00:00",
    "EndDateTime" : "2000-01-23T04:56:07.000+00:00",
    "UserId" : 6,
    "OrganisationId" : 1,
    "HourlyOvertimeRate" : 5.637376656633329,
    "HourlyRate" : 5.962133916683182
  } ]
}}, {contentType=application/xml, example=<null>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter userId: (query) The ID of the User for which you want to get UserHourlyRate objects 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CSApiResponseListUserHourlyRate> 
     */
    open class func userPayRatesGetPayRatesWithRequestBuilder(userId: Int, xChronosheetsAuth: String) -> RequestBuilder<CSApiResponseListUserHourlyRate> {
        let path = "/api/UserPayRates/GetPayRates"
        let URLString = ChronoSheetsAPIAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "UserId": userId.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CSApiResponseListUserHourlyRate>.Type = ChronoSheetsAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
