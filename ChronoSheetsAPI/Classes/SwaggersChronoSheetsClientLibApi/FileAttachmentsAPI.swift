//
// FileAttachmentsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class FileAttachmentsAPI {
    /**
     Get my file attachments.  Get files you've attached to timesheets.
     
     - parameter startDate: (query) The Start date of the date range.  File attachments after this date will be obtained. 
     - parameter endDate: (query) The End date of the date range.  File attachments before this date will be obtained. 
     - parameter skip: (query) Skip this many File attachments 
     - parameter take: (query) Take this many File attachments 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fileAttachmentsGetMyFileAttachments(startDate: Date, endDate: Date, skip: Int, take: Int, xChronosheetsAuth: String, completion: @escaping ((_ data: CSApiResponseForPaginatedListTimesheetFileAttachment?,_ error: Error?) -> Void)) {
        fileAttachmentsGetMyFileAttachmentsWithRequestBuilder(startDate: startDate, endDate: endDate, skip: skip, take: take, xChronosheetsAuth: xChronosheetsAuth).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get my file attachments.  Get files you've attached to timesheets.
     - GET /api/FileAttachments/GetMyFileAttachments
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "TotalSetCount" : 0,
  "Message" : "Message",
  "Data" : [ {
    "TimesheetStart" : "2000-01-23T04:56:07.000+00:00",
    "TimesheetEnd" : "2000-01-23T04:56:07.000+00:00",
    "AttachmentType" : "Image",
    "DateImageCaptured" : "2000-01-23T04:56:07.000+00:00",
    "OriginalFileName" : "OriginalFileName",
    "ImageLargeS3SignedUrl" : "ImageLargeS3SignedUrl",
    "DocumentS3SignedUrl" : "DocumentS3SignedUrl",
    "TimesheetId" : 6,
    "Latitude" : 2.3021358869347655,
    "ImageSmallS3SignedUrl" : "ImageSmallS3SignedUrl",
    "ImageMediumS3SignedUrl" : "ImageMediumS3SignedUrl",
    "StorageAllocationBytes" : 9,
    "Longitude" : 7.061401241503109,
    "FileAttachmentId" : 1,
    "ImageMediumFilePath" : "ImageMediumFilePath",
    "OrgId" : 5,
    "ImageSmallFilePath" : "ImageSmallFilePath",
    "MobilePlatform" : "Unknown",
    "ImageLargeFilePath" : "ImageLargeFilePath",
    "UserId" : 5,
    "NonImageFilePath" : "NonImageFilePath",
    "Notes" : "Notes",
    "DateUploaded" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "TimesheetStart" : "2000-01-23T04:56:07.000+00:00",
    "TimesheetEnd" : "2000-01-23T04:56:07.000+00:00",
    "AttachmentType" : "Image",
    "DateImageCaptured" : "2000-01-23T04:56:07.000+00:00",
    "OriginalFileName" : "OriginalFileName",
    "ImageLargeS3SignedUrl" : "ImageLargeS3SignedUrl",
    "DocumentS3SignedUrl" : "DocumentS3SignedUrl",
    "TimesheetId" : 6,
    "Latitude" : 2.3021358869347655,
    "ImageSmallS3SignedUrl" : "ImageSmallS3SignedUrl",
    "ImageMediumS3SignedUrl" : "ImageMediumS3SignedUrl",
    "StorageAllocationBytes" : 9,
    "Longitude" : 7.061401241503109,
    "FileAttachmentId" : 1,
    "ImageMediumFilePath" : "ImageMediumFilePath",
    "OrgId" : 5,
    "ImageSmallFilePath" : "ImageSmallFilePath",
    "MobilePlatform" : "Unknown",
    "ImageLargeFilePath" : "ImageLargeFilePath",
    "UserId" : 5,
    "NonImageFilePath" : "NonImageFilePath",
    "Notes" : "Notes",
    "DateUploaded" : "2000-01-23T04:56:07.000+00:00"
  } ]
}}, {contentType=application/xml, example=<null>
  <TotalSetCount>123</TotalSetCount>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     - examples: [{contentType=application/json, example={
  "Status" : "Succeeded",
  "TotalSetCount" : 0,
  "Message" : "Message",
  "Data" : [ {
    "TimesheetStart" : "2000-01-23T04:56:07.000+00:00",
    "TimesheetEnd" : "2000-01-23T04:56:07.000+00:00",
    "AttachmentType" : "Image",
    "DateImageCaptured" : "2000-01-23T04:56:07.000+00:00",
    "OriginalFileName" : "OriginalFileName",
    "ImageLargeS3SignedUrl" : "ImageLargeS3SignedUrl",
    "DocumentS3SignedUrl" : "DocumentS3SignedUrl",
    "TimesheetId" : 6,
    "Latitude" : 2.3021358869347655,
    "ImageSmallS3SignedUrl" : "ImageSmallS3SignedUrl",
    "ImageMediumS3SignedUrl" : "ImageMediumS3SignedUrl",
    "StorageAllocationBytes" : 9,
    "Longitude" : 7.061401241503109,
    "FileAttachmentId" : 1,
    "ImageMediumFilePath" : "ImageMediumFilePath",
    "OrgId" : 5,
    "ImageSmallFilePath" : "ImageSmallFilePath",
    "MobilePlatform" : "Unknown",
    "ImageLargeFilePath" : "ImageLargeFilePath",
    "UserId" : 5,
    "NonImageFilePath" : "NonImageFilePath",
    "Notes" : "Notes",
    "DateUploaded" : "2000-01-23T04:56:07.000+00:00"
  }, {
    "TimesheetStart" : "2000-01-23T04:56:07.000+00:00",
    "TimesheetEnd" : "2000-01-23T04:56:07.000+00:00",
    "AttachmentType" : "Image",
    "DateImageCaptured" : "2000-01-23T04:56:07.000+00:00",
    "OriginalFileName" : "OriginalFileName",
    "ImageLargeS3SignedUrl" : "ImageLargeS3SignedUrl",
    "DocumentS3SignedUrl" : "DocumentS3SignedUrl",
    "TimesheetId" : 6,
    "Latitude" : 2.3021358869347655,
    "ImageSmallS3SignedUrl" : "ImageSmallS3SignedUrl",
    "ImageMediumS3SignedUrl" : "ImageMediumS3SignedUrl",
    "StorageAllocationBytes" : 9,
    "Longitude" : 7.061401241503109,
    "FileAttachmentId" : 1,
    "ImageMediumFilePath" : "ImageMediumFilePath",
    "OrgId" : 5,
    "ImageSmallFilePath" : "ImageSmallFilePath",
    "MobilePlatform" : "Unknown",
    "ImageLargeFilePath" : "ImageLargeFilePath",
    "UserId" : 5,
    "NonImageFilePath" : "NonImageFilePath",
    "Notes" : "Notes",
    "DateUploaded" : "2000-01-23T04:56:07.000+00:00"
  } ]
}}, {contentType=application/xml, example=<null>
  <TotalSetCount>123</TotalSetCount>
  <Status>aeiou</Status>
  <Message>aeiou</Message>
</null>}]
     
     - parameter startDate: (query) The Start date of the date range.  File attachments after this date will be obtained. 
     - parameter endDate: (query) The End date of the date range.  File attachments before this date will be obtained. 
     - parameter skip: (query) Skip this many File attachments 
     - parameter take: (query) Take this many File attachments 
     - parameter xChronosheetsAuth: (header) The ChronoSheets Auth Token 

     - returns: RequestBuilder<CSApiResponseForPaginatedListTimesheetFileAttachment> 
     */
    open class func fileAttachmentsGetMyFileAttachmentsWithRequestBuilder(startDate: Date, endDate: Date, skip: Int, take: Int, xChronosheetsAuth: String) -> RequestBuilder<CSApiResponseForPaginatedListTimesheetFileAttachment> {
        let path = "/api/FileAttachments/GetMyFileAttachments"
        let URLString = ChronoSheetsAPIAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "StartDate": startDate.encodeToJSON(), 
            "EndDate": endDate.encodeToJSON(), 
            "Skip": skip.encodeToJSON(), 
            "Take": take.encodeToJSON()
        ])
        
        let nillableHeaders: [String: Any?] = [
            "x-chronosheets-auth": xChronosheetsAuth
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CSApiResponseForPaginatedListTimesheetFileAttachment>.Type = ChronoSheetsAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
