//
// FleetSummaryReportItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct FleetSummaryReportItem: Codable { 


    public var totalDistanceMetersFiltered: Double?
    public var totalDistanceMeters: Double?
    public var totalRunningCostDollarsFiltered: Double?
    public var totalRunningCostDollars: Double?
    /** The ID of the vehicle */
    public var id: Int?
    /** The ID of the organisation managing the vehicle */
    public var organisationId: Int?
    /** A name given to the vehicle */
    public var name: String?
    /** The cost, in dollars, of running the vehicle over one kilometer */
    public var costPerKilometer: Double?
    /** The make of the vehicle */
    public var make: String?
    /** The model of the vehicle */
    public var model: String?
    /** The year the vehicle was manufactured */
    public var year: String?
    /** The licence plate number of the vehicle */
    public var licencePlateNumber: String?
    /** Whether or not the vehicle is deleted */
    public var isDeleted: Bool?
    /** An array of employee IDs that are permitted to use the vehicle */
    public var permittedEmployees: [Int]?

    public init(totalDistanceMetersFiltered: Double?, totalDistanceMeters: Double?, totalRunningCostDollarsFiltered: Double?, totalRunningCostDollars: Double?, id: Int?, organisationId: Int?, name: String?, costPerKilometer: Double?, make: String?, model: String?, year: String?, licencePlateNumber: String?, isDeleted: Bool?, permittedEmployees: [Int]?) {
        self.totalDistanceMetersFiltered = totalDistanceMetersFiltered
        self.totalDistanceMeters = totalDistanceMeters
        self.totalRunningCostDollarsFiltered = totalRunningCostDollarsFiltered
        self.totalRunningCostDollars = totalRunningCostDollars
        self.id = id
        self.organisationId = organisationId
        self.name = name
        self.costPerKilometer = costPerKilometer
        self.make = make
        self.model = model
        self.year = year
        self.licencePlateNumber = licencePlateNumber
        self.isDeleted = isDeleted
        self.permittedEmployees = permittedEmployees
    }

    public enum CodingKeys: String, CodingKey { 
        case totalDistanceMetersFiltered = "TotalDistanceMetersFiltered"
        case totalDistanceMeters = "TotalDistanceMeters"
        case totalRunningCostDollarsFiltered = "TotalRunningCostDollarsFiltered"
        case totalRunningCostDollars = "TotalRunningCostDollars"
        case id = "Id"
        case organisationId = "OrganisationId"
        case name = "Name"
        case costPerKilometer = "CostPerKilometer"
        case make = "Make"
        case model = "Model"
        case year = "Year"
        case licencePlateNumber = "LicencePlateNumber"
        case isDeleted = "IsDeleted"
        case permittedEmployees = "PermittedEmployees"
    }

}
